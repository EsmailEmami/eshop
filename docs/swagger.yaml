definitions:
  httpmodels.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  models.AuthToken:
    properties:
      createdAt:
        type: string
      expiresAt:
        type: string
      id:
        type: string
      loginHistories:
        items:
          $ref: '#/definitions/models.LoginHistory'
        type: array
      revoked:
        type: boolean
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userId:
        type: string
    type: object
  models.BrandOutPutModel:
    properties:
      code:
        type: string
      createdAt:
        type: string
      fileId:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.BrandReqModel:
    properties:
      code:
        type: string
      fileId:
        type: string
      name:
        type: string
    type: object
  models.CategoryOutPutModel:
    properties:
      code:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.CategoryReqModel:
    properties:
      code:
        type: string
      name:
        type: string
    type: object
  models.ColorOutPutModel:
    properties:
      code:
        type: string
      colorHex:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.ColorReqModel:
    properties:
      code:
        type: string
      colorHex:
        type: string
      name:
        type: string
    type: object
  models.LoginHistory:
    properties:
      createdAt:
        type: string
      id:
        type: string
      ip:
        type: string
      token:
        $ref: '#/definitions/models.AuthToken'
      tokenId:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userAgent:
        type: string
      userId:
        type: string
    type: object
  models.LoginInputModel:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.LoginOutputModel:
    properties:
      expiresAt:
        type: string
      expiresIn:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/models.LoginOutputUserModel'
    type: object
  models.LoginOutputUserModel:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
    type: object
  models.RegisterInputModel:
    properties:
      password:
        type: string
      passwordConfirmation:
        type: string
      username:
        type: string
    type: object
  models.Role:
    properties:
      code:
        type: string
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      id:
        type: string
      isSystem:
        type: boolean
      name:
        type: string
      permissions:
        items:
          type: string
        type: array
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.User:
    properties:
      authTokens:
        items:
          $ref: '#/definitions/models.AuthToken'
        type: array
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      enabled:
        type: boolean
      firstName:
        type: string
      id:
        type: string
      isSystem:
        type: boolean
      lastName:
        type: string
      mobile:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      roleId:
        type: string
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/is_authenticated:
    get:
      consumes:
      - application/json
      description: Returns the logged in user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Returns the logged in user
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Log user in
      parameters:
      - description: Login input model
        in: body
        name: loginInput
        required: true
        schema:
          $ref: '#/definitions/models.LoginInputModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginOutputModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Log user in
      tags:
      - Auth
  /auth/logout:
    get:
      consumes:
      - application/json
      description: Logout the user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Logout the user.
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register a new user.
      parameters:
      - description: Register input model
        in: body
        name: RegisterInput
        required: true
        schema:
          $ref: '#/definitions/models.RegisterInputModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: a new user.
      tags:
      - Auth
  /brand:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BrandOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
    post:
      consumes:
      - application/json
      parameters:
      - description: Brand model
        in: body
        name: Brand
        required: true
        schema:
          $ref: '#/definitions/models.BrandReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /brand/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BrandOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /brand/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /brand/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Brand model
        in: body
        name: Brand
        required: true
        schema:
          $ref: '#/definitions/models.BrandReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /category:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CategoryOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
    post:
      consumes:
      - application/json
      parameters:
      - description: Category model
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
  /category/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
  /category/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
  /category/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Category model
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
  /color:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ColorOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
    post:
      consumes:
      - application/json
      parameters:
      - description: Color model
        in: body
        name: Color
        required: true
        schema:
          $ref: '#/definitions/models.ColorReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
  /color/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ColorOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
  /color/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
  /color/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Color model
        in: body
        name: Color
        required: true
        schema:
          $ref: '#/definitions/models.ColorReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
  /file/uploadImage/{itemId}/{fileType}:
    post:
      consumes:
      - application/json
      description: Uploads an image file to the server.
      parameters:
      - description: item ID
        in: path
        name: itemId
        required: true
        type: string
      - description: file Type
        in: path
        name: fileType
        required: true
        type: integer
      - description: Image file to be uploaded
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Upload an image file
      tags:
      - Files
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
