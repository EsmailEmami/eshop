definitions:
  helpers.KeyValueResponse-string-int:
    properties:
      key:
        type: string
      value:
        type: integer
    type: object
  helpers.KeyValueResponse-uuid_UUID-string:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  helpers.SuccessDBResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  helpers.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  models.Action:
    properties:
      children:
        items:
          $ref: '#/definitions/models.Action'
        type: array
      code:
        type: string
      name:
        type: string
    type: object
  models.Address:
    properties:
      address:
        type: string
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      nationalCode:
        type: string
      phoneNumber:
        type: string
      plaque:
        type: integer
      postalCode:
        type: string
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.AddressOutPutModel:
    properties:
      address:
        type: string
      createdAt:
        type: string
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      nationalCode:
        type: string
      phoneNumber:
        type: string
      plaque:
        type: integer
      postalCode:
        type: string
      updatedAt:
        type: string
    type: object
  models.AddressReqModel:
    properties:
      address:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      nationalCode:
        type: string
      phoneNumber:
        type: string
      plaque:
        type: integer
      postalCode:
        type: string
    type: object
  models.AdminCommentOutPutModel:
    properties:
      adminNote:
        type: string
      commentStatus:
        $ref: '#/definitions/models.CommentStatus'
      createdAt:
        type: string
      id:
        type: string
      productId:
        type: string
      productName:
        type: string
      rate:
        type: integer
      strengthPoints:
        items:
          type: string
        type: array
      text:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      weakPonits:
        items:
          type: string
        type: array
    type: object
  models.AdminOrderOutPutModel:
    properties:
      createdAt:
        type: string
      orderId:
        type: string
      price:
        type: number
      status:
        type: integer
      updatedAt:
        type: string
      userId:
        type: string
      username:
        type: string
    type: object
  models.AppPic:
    properties:
      appPicType:
        $ref: '#/definitions/models.AppPicType'
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      description:
        type: string
      file:
        $ref: '#/definitions/models.File'
      fileId:
        type: string
      id:
        type: string
      priority:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
      url:
        type: string
    type: object
  models.AppPicOutPutModel:
    properties:
      appPicType:
        $ref: '#/definitions/models.AppPicType'
      createdAt:
        type: string
      description:
        type: string
      fileId:
        type: string
      id:
        type: string
      priority:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
      url:
        type: string
    type: object
  models.AppPicReqModel:
    properties:
      appPicType:
        $ref: '#/definitions/models.AppPicType'
      description:
        type: string
      fileId:
        type: string
      priority:
        type: integer
      title:
        type: string
      url:
        type: string
    type: object
  models.AppPicType:
    enum:
    - 0
    type: integer
    x-enum-varnames:
    - AppPicTypeSlider
  models.AuthToken:
    properties:
      createdAt:
        type: string
      expiresAt:
        type: string
      id:
        type: string
      loginHistories:
        items:
          $ref: '#/definitions/models.LoginHistory'
        type: array
      revoked:
        type: boolean
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userId:
        type: string
    type: object
  models.Brand:
    properties:
      code:
        type: string
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      file:
        $ref: '#/definitions/models.File'
      fileId:
        type: string
      id:
        type: string
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.BrandOutPutModel:
    properties:
      code:
        type: string
      createdAt:
        type: string
      fileId:
        type: string
      fileName:
        type: string
      fileType:
        $ref: '#/definitions/models.FileType'
      fileUrl:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.BrandReqModel:
    properties:
      code:
        type: string
      fileId:
        type: string
      name:
        type: string
    type: object
  models.Category:
    properties:
      code:
        type: string
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      id:
        type: string
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.CategoryOutPutModel:
    properties:
      code:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.CategoryReqModel:
    properties:
      code:
        type: string
      name:
        type: string
    type: object
  models.ChangeCommentStatus:
    properties:
      note:
        type: string
      status:
        $ref: '#/definitions/models.CommentStatus'
    type: object
  models.Color:
    properties:
      code:
        type: string
      colorHex:
        type: string
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      id:
        type: string
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/models.ProductItem'
        type: array
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.ColorOutPutModel:
    properties:
      code:
        type: string
      colorHex:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.ColorReqModel:
    properties:
      code:
        type: string
      colorHex:
        type: string
      name:
        type: string
    type: object
  models.Comment:
    properties:
      adminNote:
        type: string
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      id:
        type: string
      product:
        $ref: '#/definitions/models.Product'
      productId:
        type: string
      rate:
        type: integer
      status:
        $ref: '#/definitions/models.CommentStatus'
      strengthPoints:
        items:
          type: string
        type: array
      text:
        type: string
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
      weakPonits:
        items:
          type: string
        type: array
    type: object
  models.CommentReqModel:
    properties:
      productId:
        type: string
      rate:
        type: integer
      strengthPoints:
        items:
          type: string
        type: array
      text:
        type: string
      weakPonits:
        items:
          type: string
        type: array
    type: object
  models.CommentStatus:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - CommentStatusPending
    - CommntStatusAccept
    - CommentStatusReject
  models.Discount:
    properties:
      code:
        type: string
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      expiresIn:
        type: string
      id:
        type: string
      productItem:
        $ref: '#/definitions/models.ProductItem'
      productItemId:
        type: string
      quantity:
        type: integer
      relatedUser:
        $ref: '#/definitions/models.User'
      relatedUserId:
        type: string
      type:
        $ref: '#/definitions/models.DiscountType'
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
      value:
        type: number
    type: object
  models.DiscountOutPutModel:
    properties:
      code:
        type: string
      createdAt:
        type: string
      creatorUserId:
        type: string
      creatorUsername:
        type: string
      expiresIn:
        type: string
      id:
        type: string
      productItemId:
        type: string
      productName:
        type: string
      quantity:
        type: integer
      relatedUserId:
        type: string
      relatedUserUsername:
        type: string
      type:
        $ref: '#/definitions/models.DiscountType'
      typeName:
        type: string
      updatedAt:
        type: string
      value:
        type: number
    type: object
  models.DiscountReqModel:
    properties:
      code:
        type: string
      expiresIn:
        type: string
      productItemId:
        type: string
      quantity:
        type: integer
      relatedUserId:
        type: string
      type:
        $ref: '#/definitions/models.DiscountType'
      value:
        type: number
    type: object
  models.DiscountType:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - DiscountTypeNumeric
    - DiscountTypePercent
    - DiscountTypeCode
  models.FavoriteProductItem:
    properties:
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      id:
        type: string
      productItem:
        $ref: '#/definitions/models.ProductItem'
      productItemId:
        type: string
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.FavoriteProductItemReqModel:
    properties:
      productItemId:
        type: string
    type: object
  models.File:
    properties:
      appPics:
        items:
          $ref: '#/definitions/models.AppPic'
        type: array
      brands:
        items:
          $ref: '#/definitions/models.Brand'
        type: array
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      expireDate:
        type: string
      extension:
        type: string
      fileType:
        $ref: '#/definitions/models.FileType'
      id:
        type: string
      itemId:
        type: string
      mimeType:
        type: string
      originalName:
        type: string
      products:
        items:
          $ref: '#/definitions/models.ProductFileMap'
        type: array
      uniqueFineName:
        type: string
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.FileOutPutModel:
    properties:
      createdAt:
        type: string
      extension:
        type: string
      fileType:
        $ref: '#/definitions/models.FileType'
      id:
        type: string
      mimeType:
        type: string
      originalName:
        type: string
      uniqueFineName:
        type: string
      updatedAt:
        type: string
    type: object
  models.FileType:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - FileTypeSystematic
    - FileTypeProduct
    - FileTypeBrand
    - FileTypeAppPic
  models.LoginHistory:
    properties:
      createdAt:
        type: string
      id:
        type: string
      ip:
        type: string
      token:
        $ref: '#/definitions/models.AuthToken'
      tokenId:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userAgent:
        type: string
      userId:
        type: string
    type: object
  models.LoginInputModel:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.LoginOutputModel:
    properties:
      expiresAt:
        type: string
      expiresIn:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/models.LoginOutputUserModel'
    type: object
  models.LoginOutputUserModel:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
    type: object
  models.Order:
    properties:
      address:
        type: string
      code:
        type: string
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      firstName:
        description: keep the address
        type: string
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
      lastName:
        type: string
      nationalCode:
        type: string
      payedAt:
        type: string
      phoneNumber:
        type: string
      plaque:
        type: integer
      postalCode:
        type: string
      price:
        type: number
      status:
        type: integer
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.OrderItem:
    properties:
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      id:
        type: string
      order:
        $ref: '#/definitions/models.Order'
      orderId:
        type: string
      price:
        type: number
      productItem:
        $ref: '#/definitions/models.ProductItem'
      productItemId:
        type: string
      quantity:
        type: integer
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.OrderItemOutPutModel:
    properties:
      fileUrl:
        type: string
      id:
        type: string
      price:
        type: number
      productItemId:
        type: string
      productName:
        type: string
      quantity:
        type: integer
      totalPrice:
        type: number
    type: object
  models.OrderItemReqModel:
    properties:
      productItemId:
        type: string
      quantity:
        type: integer
    type: object
  models.OrderOutPutModel:
    properties:
      items:
        items:
          $ref: '#/definitions/models.OrderItemOutPutModel'
        type: array
      price:
        type: number
    type: object
  models.Product:
    properties:
      brand:
        $ref: '#/definitions/models.Brand'
      brandId:
        type: string
      category:
        $ref: '#/definitions/models.Category'
      categoryId:
        type: string
      code:
        type: string
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      defaultProductItemId:
        type: string
      description:
        type: string
      features:
        items:
          $ref: '#/definitions/models.ProductFeatureValue'
        type: array
      files:
        items:
          $ref: '#/definitions/models.ProductFileMap'
        type: array
      id:
        type: string
      name:
        type: string
      productItems:
        items:
          $ref: '#/definitions/models.ProductItem'
        type: array
      shortDescription:
        type: string
      topFeatures:
        items:
          type: string
        type: array
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.ProductAdminOutPutModel:
    properties:
      brandId:
        type: string
      brandName:
        type: string
      categoryId:
        type: string
      categoryName:
        type: string
      code:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      shortDescription:
        type: string
      topFeatures:
        items:
          type: string
        type: array
    type: object
  models.ProductCommentOutPutModel:
    properties:
      createdAt:
        type: string
      id:
        type: string
      rate:
        type: integer
      strengthPoints:
        items:
          type: string
        type: array
      text:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      weakPonits:
        items:
          type: string
        type: array
    type: object
  models.ProductFeatureCategory:
    properties:
      code:
        type: string
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      id:
        type: string
      keys:
        items:
          $ref: '#/definitions/models.ProductFeatureKey'
        type: array
      name:
        type: string
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.ProductFeatureCategoryOutPutModel:
    properties:
      code:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.ProductFeatureCategoryReqModel:
    properties:
      code:
        type: string
      name:
        type: string
    type: object
  models.ProductFeatureKey:
    properties:
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      id:
        type: string
      name:
        type: string
      productFeatureCategory:
        $ref: '#/definitions/models.ProductFeatureCategory'
      productFeatureCategoryId:
        type: string
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
      values:
        items:
          $ref: '#/definitions/models.ProductFeatureValue'
        type: array
    type: object
  models.ProductFeatureKeyOutPutModel:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.ProductFeatureKeyReqModel:
    properties:
      name:
        type: string
      productFeatureCategoryId:
        type: string
    type: object
  models.ProductFeatureValue:
    properties:
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      id:
        type: string
      product:
        $ref: '#/definitions/models.Product'
      productFeatureKey:
        $ref: '#/definitions/models.ProductFeatureKey'
      productFeatureKeyId:
        type: string
      productId:
        type: string
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
      value:
        type: string
    type: object
  models.ProductFeatureValueOutPutModel:
    properties:
      createdAt:
        type: string
      id:
        type: string
      productFeatureKeyId:
        type: string
      updatedAt:
        type: string
      value:
        type: string
    type: object
  models.ProductFeatureValueReqModel:
    properties:
      productFeatureKeyId:
        type: string
      value:
        type: string
    type: object
  models.ProductFileMap:
    properties:
      file:
        $ref: '#/definitions/models.File'
      fileId:
        type: string
      priority:
        type: integer
      product:
        $ref: '#/definitions/models.Product'
      productId:
        type: string
    type: object
  models.ProductItem:
    properties:
      boughtQuantity:
        type: integer
      color:
        $ref: '#/definitions/models.Color'
      colorId:
        type: string
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      discounts:
        items:
          $ref: '#/definitions/models.Discount'
        type: array
      favorites:
        items:
          $ref: '#/definitions/models.FavoriteProductItem'
        type: array
      id:
        type: string
      orderItems:
        items:
          $ref: '#/definitions/models.OrderItem'
        type: array
      price:
        type: number
      product:
        $ref: '#/definitions/models.Product'
      productId:
        type: string
      quantity:
        type: integer
      status:
        $ref: '#/definitions/models.ProductStatus'
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.ProductItemCategoryFeatureModel:
    properties:
      category:
        type: string
      items:
        items:
          $ref: '#/definitions/models.ProductItemFeatureModel'
        type: array
    type: object
  models.ProductItemFeatureModel:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  models.ProductItemFileOutPutModel:
    properties:
      fileType:
        $ref: '#/definitions/models.FileType'
      fileUrl:
        type: string
      id:
        type: string
      originalName:
        type: string
      uniqueFineName:
        type: string
    type: object
  models.ProductItemInfoColorOutPutModel:
    properties:
      colorHex:
        type: string
      name:
        type: string
      productItemId:
        type: string
    type: object
  models.ProductItemInfoOutPutModel:
    properties:
      color:
        type: string
      colorId:
        type: string
      colors:
        items:
          $ref: '#/definitions/models.ProductItemInfoColorOutPutModel'
        type: array
      features:
        items:
          $ref: '#/definitions/models.ProductItemCategoryFeatureModel'
        type: array
      files:
        items:
          $ref: '#/definitions/models.ProductItemFileOutPutModel'
        type: array
      id:
        type: string
      price:
        type: number
      productCode:
        type: string
      productDescription:
        type: string
      productId:
        type: string
      productShortDescription:
        type: string
      productTitle:
        type: string
      quantity:
        type: integer
      status:
        $ref: '#/definitions/models.ProductStatus'
    type: object
  models.ProductItemReqModel:
    properties:
      colorId:
        type: string
      isMainItem:
        type: boolean
      price:
        type: number
      productId:
        type: string
      quantity:
        type: integer
      status:
        $ref: '#/definitions/models.ProductStatus'
    type: object
  models.ProductOutPutModel:
    properties:
      brandFileUrl:
        type: string
      brandId:
        type: string
      brandName:
        type: string
      categoryId:
        type: string
      categoryName:
        type: string
      code:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  models.ProductReqModel:
    properties:
      brandId:
        type: string
      categoryId:
        type: string
      code:
        type: string
      description:
        type: string
      name:
        type: string
      shortDescription:
        type: string
      topFeatures:
        items:
          type: string
        type: array
    type: object
  models.ProductStatus:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - ProductStatusPublish
    - ProductStatusInActive
  models.ProductWithItemOutPutModel:
    properties:
      brandId:
        type: string
      brandName:
        type: string
      categoryId:
        type: string
      categoryName:
        type: string
      code:
        type: string
      fileUrl:
        type: string
      id:
        type: string
      itemId:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  models.RecoveryPasswordModel:
    properties:
      password:
        type: string
      passwordConfirmation:
        type: string
    type: object
  models.RecoveryPasswordReqModel:
    properties:
      phoneNumberOrEmailAddress:
        type: string
    type: object
  models.RegisterInputModel:
    properties:
      password:
        type: string
      passwordConfirmation:
        type: string
      username:
        type: string
    type: object
  models.RevenueByCategory:
    properties:
      categoryName:
        type: string
      percentage:
        type: number
      price:
        type: number
    type: object
  models.Role:
    properties:
      code:
        type: string
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      id:
        type: string
      isSystem:
        type: boolean
      name:
        type: string
      permissions:
        items:
          type: string
        type: array
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.RoleOutPutModel:
    properties:
      code:
        type: string
      createdAt:
        type: string
      id:
        type: string
      isSystem:
        type: boolean
      name:
        type: string
      permissions:
        items:
          type: string
        type: array
      updatedAt:
        type: string
    type: object
  models.RoleReqModel:
    properties:
      code:
        type: string
      isSystem:
        type: boolean
      name:
        type: string
      permissions:
        items:
          type: string
        type: array
    type: object
  models.SettingsReqModel:
    properties:
      column:
        type: string
      value: {}
    type: object
  models.SuggestionProductOutPutModel:
    properties:
      colorId:
        type: string
      colors:
        items:
          $ref: '#/definitions/models.ProductItemInfoColorOutPutModel'
        type: array
      files:
        items:
          $ref: '#/definitions/models.ProductItemFileOutPutModel'
        type: array
      name:
        type: string
      productId:
        type: string
      productItemId:
        type: string
      topFeatures:
        items:
          type: string
        type: array
    type: object
  models.User:
    properties:
      addresses:
        items:
          $ref: '#/definitions/models.Address'
        type: array
      authTokens:
        items:
          $ref: '#/definitions/models.AuthToken'
        type: array
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      discounts:
        items:
          $ref: '#/definitions/models.Discount'
        type: array
      email:
        type: string
      enabled:
        type: boolean
      firstName:
        type: string
      id:
        type: string
      isSystem:
        type: boolean
      lastName:
        type: string
      mobile:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      roleId:
        type: string
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
      username:
        type: string
    type: object
  models.UserCommentOutPutModel:
    properties:
      adminNote:
        type: string
      commentStatus:
        $ref: '#/definitions/models.CommentStatus'
      createdAt:
        type: string
      id:
        type: string
      productId:
        type: string
      productName:
        type: string
      rate:
        type: integer
      strengthPoints:
        items:
          type: string
        type: array
      text:
        type: string
      updatedAt:
        type: string
      weakPonits:
        items:
          type: string
        type: array
    type: object
  models.UserDashboardInfoOutPutModel:
    properties:
      firstName:
        type: string
      id:
        type: string
      lastName:
        type: string
      mobile:
        type: string
      roleName:
        type: string
      username:
        type: string
    type: object
  models.UserOrderOutPutModel:
    properties:
      code:
        type: string
      createdAt:
        type: string
      fileUrls:
        items:
          type: string
        type: array
      id:
        type: string
      price:
        type: number
      status:
        type: integer
    type: object
  models.UserOutPutModel:
    properties:
      createdAt:
        type: string
      email:
        type: string
      enabled:
        type: boolean
      firstName:
        type: string
      id:
        type: string
      isSystem:
        type: boolean
      lastName:
        type: string
      mobile:
        type: string
      roleId:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  models.UserReqModel:
    properties:
      email:
        type: string
      enabled:
        type: boolean
      firstName:
        type: string
      isSystem:
        type: boolean
      lastName:
        type: string
      mobile:
        type: string
      roleId:
        type: string
      username:
        type: string
    type: object
  parameter.ListResponse-helpers_KeyValueResponse-uuid_UUID-string:
    properties:
      data:
        items:
          $ref: '#/definitions/helpers.KeyValueResponse-uuid_UUID-string'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_AdminCommentOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.AdminCommentOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_AdminOrderOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.AdminOrderOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_BrandOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.BrandOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_CategoryOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.CategoryOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_ColorOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ColorOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_DiscountOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.DiscountOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_ProductCommentOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ProductCommentOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_ProductFeatureCategoryOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ProductFeatureCategoryOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_ProductFeatureKeyOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ProductFeatureKeyOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_ProductFeatureValueOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ProductFeatureValueOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_ProductWithItemOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.ProductWithItemOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_RoleOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.RoleOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_SuggestionProductOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.SuggestionProductOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_UserCommentOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.UserCommentOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  parameter.ListResponse-models_UserOutPutModel:
    properties:
      data:
        items:
          $ref: '#/definitions/models.UserOutPutModel'
        type: array
      from:
        type: integer
      last_page:
        type: integer
      limit:
        type: integer
      page:
        type: integer
      to:
        type: integer
      total:
        type: integer
    type: object
  processor.SettingItem:
    properties:
      description:
        type: string
      field:
        type: string
      fieldType:
        type: string
      isNullable:
        type: boolean
      title:
        type: string
      value: {}
    type: object
info:
  contact: {}
paths:
  /admin/address/{userId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AddressOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Addresses
  /admin/appPic:
    post:
      consumes:
      - application/json
      parameters:
      - description: AppPic model
        in: body
        name: AppPic
        required: true
        schema:
          $ref: '#/definitions/models.AppPicReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - AppPics
  /admin/appPic/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AppPicOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - AppPics
  /admin/appPic/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - AppPics
  /admin/appPic/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: AppPic model
        in: body
        name: AppPic
        required: true
        schema:
          $ref: '#/definitions/models.AppPicReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - AppPics
  /admin/brand:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_BrandOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
    post:
      consumes:
      - application/json
      parameters:
      - description: Brand model
        in: body
        name: Brand
        required: true
        schema:
          $ref: '#/definitions/models.BrandReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /admin/brand/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BrandOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /admin/brand/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /admin/brand/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Brand model
        in: body
        name: Brand
        required: true
        schema:
          $ref: '#/definitions/models.BrandReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /admin/category:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_CategoryOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
    post:
      consumes:
      - application/json
      parameters:
      - description: Category model
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
  /admin/category/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
  /admin/category/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
  /admin/category/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Category model
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
  /admin/color:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_ColorOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
    post:
      consumes:
      - application/json
      parameters:
      - description: Color model
        in: body
        name: Color
        required: true
        schema:
          $ref: '#/definitions/models.ColorReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
  /admin/color/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ColorOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
  /admin/color/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
  /admin/color/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Color model
        in: body
        name: Color
        required: true
        schema:
          $ref: '#/definitions/models.ColorReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
  /admin/comment:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      - description: Product ID
        in: query
        name: productId
        type: string
      - description: User ID
        in: query
        name: userId
        type: string
      - description: Comment Status
        enum:
        - 0
        - 1
        - 2
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_AdminCommentOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Comments
  /admin/comment/changeStatus/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Comment model
        in: body
        name: Model
        required: true
        schema:
          $ref: '#/definitions/models.ChangeCommentStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Comments
  /admin/discount:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_DiscountOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Discounts
    post:
      consumes:
      - application/json
      parameters:
      - description: Discount model
        in: body
        name: Discount
        required: true
        schema:
          $ref: '#/definitions/models.DiscountReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Discounts
  /admin/discount/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DiscountOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Discounts
  /admin/discount/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Discounts
  /admin/discount/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Discount model
        in: body
        name: Discount
        required: true
        schema:
          $ref: '#/definitions/models.DiscountReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Discounts
  /admin/is_authenticated:
    get:
      consumes:
      - application/json
      description: Returns the logged in user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Returns the logged in user
      tags:
      - Auth
  /admin/login:
    post:
      consumes:
      - application/json
      description: Log user in
      parameters:
      - description: Login input model
        in: body
        name: loginInput
        required: true
        schema:
          $ref: '#/definitions/models.LoginInputModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginOutputModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Log user in
      tags:
      - Auth
  /admin/logout:
    get:
      consumes:
      - application/json
      description: Logout the user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Logout the user.
      tags:
      - Auth
  /admin/order:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      - description: order status
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_AdminOrderOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Orders
  /admin/product:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProductOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Products
    post:
      consumes:
      - application/json
      parameters:
      - description: Product model
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.ProductReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessDBResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Products
  /admin/product/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductAdminOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Products
  /admin/product/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Products
  /admin/product/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Product model
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.ProductReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Products
  /admin/productFeatureCategory:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_ProductFeatureCategoryOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureCategories
    post:
      consumes:
      - application/json
      parameters:
      - description: ProductFeatureCategory model
        in: body
        name: ProductFeatureCategory
        required: true
        schema:
          $ref: '#/definitions/models.ProductFeatureCategoryReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureCategories
  /admin/productFeatureCategory/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductFeatureCategoryOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureCategories
  /admin/productFeatureCategory/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureCategories
  /admin/productFeatureCategory/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: ProductFeatureCategory model
        in: body
        name: ProductFeatureCategory
        required: true
        schema:
          $ref: '#/definitions/models.ProductFeatureCategoryReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureCategories
  /admin/productFeatureKey:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_ProductFeatureKeyOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureKeys
    post:
      consumes:
      - application/json
      parameters:
      - description: ProductFeatureKey model
        in: body
        name: ProductFeatureKey
        required: true
        schema:
          $ref: '#/definitions/models.ProductFeatureKeyReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureKeys
  /admin/productFeatureKey/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductFeatureKeyOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureKeys
  /admin/productFeatureKey/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureKeys
  /admin/productFeatureKey/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: ProductFeatureKey model
        in: body
        name: ProductFeatureKey
        required: true
        schema:
          $ref: '#/definitions/models.ProductFeatureKeyReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureKeys
  /admin/productFeatureValue:
    get:
      consumes:
      - application/json
      parameters:
      - description: Product Feature Key ID
        in: query
        name: keyId
        type: string
      - description: Product ID
        in: query
        name: productId
        type: string
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_ProductFeatureValueOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureValues
  /admin/productFeatureValue/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductFeatureValueOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureValues
  /admin/productFeatureValue/{productId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: productId
        required: true
        type: string
      - description: ProductFeatureValue model
        in: body
        name: ProductFeatureValue
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ProductFeatureValueReqModel'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureValues
  /admin/productFeatureValue/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureValues
  /admin/productItem:
    post:
      consumes:
      - application/json
      parameters:
      - description: ProductItem model
        in: body
        name: ProductItem
        required: true
        schema:
          $ref: '#/definitions/models.ProductItemReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductItems
  /admin/productItem/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductItems
  /admin/productItem/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: ProductItem model
        in: body
        name: ProductItem
        required: true
        schema:
          $ref: '#/definitions/models.ProductItemReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductItems
  /admin/productItem/product/{productId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: productId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProductOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductItems
  /admin/profile/favoriteProducts/{userId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      - description: Category ID
        in: query
        name: categoryId
        type: string
      - description: Brand ID
        in: query
        name: brandId
        type: string
      - description: Min Price
        in: query
        name: minPrice
        type: number
      - description: Max Price
        in: query
        name: maxPrice
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_ProductWithItemOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Profile
  /admin/profile/orders/{userId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserOrderOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Profile
  /admin/report/revenueByCategory:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RevenueByCategory'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Reports
  /admin/report/sellsChart:
    get:
      consumes:
      - application/json
      parameters:
      - description: chart type
        enum:
        - hour
        - daily
        - weekly
        - monthly
        in: query
        name: type
        required: true
        type: string
      - description: rows length default is 15
        in: query
        name: length
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/helpers.KeyValueResponse-string-int'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Reports
  /admin/role:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_RoleOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Roles
    post:
      consumes:
      - application/json
      parameters:
      - description: Role model
        in: body
        name: Role
        required: true
        schema:
          $ref: '#/definitions/models.RoleReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Roles
  /admin/role/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RoleOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Roles
  /admin/role/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Roles
  /admin/role/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Role model
        in: body
        name: Role
        required: true
        schema:
          $ref: '#/definitions/models.RoleReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Roles
  /admin/role/permissions:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Action'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Roles
  /admin/settings/{item}:
    get:
      consumes:
      - application/json
      description: Settings
      parameters:
      - description: item to get list
        enum:
        - systemSetting
        in: path
        name: item
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/processor.SettingItem'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Settings
      tags:
      - Settings
    post:
      consumes:
      - application/json
      parameters:
      - description: item to get list
        enum:
        - systemSetting
        in: path
        name: item
        required: true
        type: string
      - description: Setting model
        in: body
        name: Setting
        required: true
        schema:
          $ref: '#/definitions/models.SettingsReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Settings
  /admin/user:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_UserOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Users
    post:
      consumes:
      - application/json
      parameters:
      - description: User model
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Users
  /admin/user/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Users
  /admin/user/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Users
  /admin/user/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: User model
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/models.UserReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Users
  /admin/user/recoveryPasword/{id}:
    post:
      consumes:
      - application/json
      description: recovery user password.
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Recovery password model
        in: body
        name: RecoveryPasswordInput
        required: true
        schema:
          $ref: '#/definitions/models.RecoveryPasswordModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: recovery user password.
      tags:
      - Users
  /user/address:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AddressOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Addresses
    post:
      consumes:
      - application/json
      parameters:
      - description: Address model
        in: body
        name: Address
        required: true
        schema:
          $ref: '#/definitions/models.AddressReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Addresses
  /user/address/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AddressOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Addresses
  /user/address/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Addresses
  /user/address/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Address model
        in: body
        name: Address
        required: true
        schema:
          $ref: '#/definitions/models.AddressReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Addresses
  /user/appPic:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AppPicOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - AppPics
  /user/brand:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_BrandOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /user/brand/selectList:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-helpers_KeyValueResponse-uuid_UUID-string'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /user/category/selectList:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-helpers_KeyValueResponse-uuid_UUID-string'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
  /user/color/selectList:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-helpers_KeyValueResponse-uuid_UUID-string'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
  /user/comment:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      - description: Comment Status
        enum:
        - 0
        - 1
        - 2
        in: query
        name: status
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_UserCommentOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Comments
    post:
      consumes:
      - application/json
      parameters:
      - description: Comment model
        in: body
        name: Comment
        required: true
        schema:
          $ref: '#/definitions/models.CommentReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Comments
  /user/comment/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserCommentOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Comments
  /user/comment/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Comments
  /user/comment/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Comment model
        in: body
        name: Comment
        required: true
        schema:
          $ref: '#/definitions/models.CommentReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Comments
  /user/comment/product/{productId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: productId
        required: true
        type: string
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_ProductCommentOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Comments
  /user/favoriteProductItem:
    post:
      consumes:
      - application/json
      parameters:
      - description: FavoriteProductItem model
        in: body
        name: FavoriteProductItem
        required: true
        schema:
          $ref: '#/definitions/models.FavoriteProductItemReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - FavoriteProductItems
  /user/favoriteProductItem/delete/{productItemId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Product Item ID
        in: path
        name: productItemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - FavoriteProductItems
  /user/favoriteProductItem/isFavorite/{productItemId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Product Item ID
        in: path
        name: productItemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessDBResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - FavoriteProductItems
  /user/file/{fileId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: file ID
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Files
  /user/file/{itemId}/{fileType}:
    get:
      consumes:
      - application/json
      parameters:
      - description: item ID
        in: path
        name: itemId
        required: true
        type: string
      - description: file Type
        enum:
        - 0
        - 1
        - 2
        - 3
        in: path
        name: fileType
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FileOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Files
  /user/file/changePriority/{fileId}/{itemId}/{priority}:
    post:
      consumes:
      - application/json
      parameters:
      - description: file ID
        in: path
        name: fileId
        required: true
        type: string
      - description: item ID
        in: path
        name: itemId
        required: true
        type: string
      - description: priority
        in: path
        name: priority
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Files
  /user/file/delete/{fileId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: file ID
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Files
  /user/file/stream/{fileId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: file ID
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Files
  /user/file/uploadImage/{itemId}/{fileType}:
    post:
      consumes:
      - application/json
      description: Uploads an image file to the server.
      parameters:
      - description: item ID
        in: path
        name: itemId
        required: true
        type: string
      - description: file Type
        enum:
        - 0
        - 1
        - 2
        - 3
        in: path
        name: fileType
        required: true
        type: integer
      - description: Image file to be uploaded
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Upload an image file
      tags:
      - Files
  /user/is_authenticated:
    get:
      consumes:
      - application/json
      description: Returns the logged in user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Returns the logged in user
      tags:
      - Auth
  /user/login:
    post:
      consumes:
      - application/json
      description: Log user in
      parameters:
      - description: Login input model
        in: body
        name: loginInput
        required: true
        schema:
          $ref: '#/definitions/models.LoginInputModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginOutputModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Log user in
      tags:
      - Auth
  /user/logout:
    get:
      consumes:
      - application/json
      description: Logout the user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Logout the user.
      tags:
      - Auth
  /user/order:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OrderOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Orders
  /user/order/checkout/{addressId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: addressId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Orders
  /user/orderItem:
    post:
      consumes:
      - application/json
      parameters:
      - description: OrderItem model
        in: body
        name: OrderItem
        required: true
        schema:
          $ref: '#/definitions/models.OrderItemReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - OrderItems
  /user/orderItem/delete/{productItemId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Product Item ID
        in: path
        name: productItemId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helpers.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - OrderItems
  /user/product:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      - description: Category ID
        in: query
        name: categoryId
        type: string
      - description: Brand ID
        in: query
        name: brandId
        type: string
      - description: Min Price
        in: query
        name: minPrice
        type: number
      - description: Max Price
        in: query
        name: maxPrice
        type: number
      - description: order by
        enum:
        - newest
        - topSell
        - cheap
        - expersive
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_ProductWithItemOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Products
  /user/product/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Products
  /user/product/suggestions:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      - description: Category ID
        in: query
        name: categoryId
        type: string
      - description: Brand ID
        in: query
        name: brandId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_SuggestionProductOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Products
  /user/productItem/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductItemInfoOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductItems
  /user/profile:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UserDashboardInfoOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Profile
  /user/profile/favoriteProducts:
    get:
      consumes:
      - application/json
      parameters:
      - description: page size
        in: query
        name: page
        type: string
      - description: length of records to show
        in: query
        name: limit
        type: string
      - description: search for item
        in: query
        name: searchTerm
        type: string
      - description: Category ID
        in: query
        name: categoryId
        type: string
      - description: Brand ID
        in: query
        name: brandId
        type: string
      - description: Min Price
        in: query
        name: minPrice
        type: number
      - description: Max Price
        in: query
        name: maxPrice
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/parameter.ListResponse-models_ProductWithItemOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Profile
  /user/profile/orders:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.UserOrderOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Profile
  /user/recoveryPasword:
    post:
      consumes:
      - application/json
      description: recovery user password.
      parameters:
      - description: Recovery password model
        in: body
        name: RecoveryPasswordInput
        required: true
        schema:
          $ref: '#/definitions/models.RecoveryPasswordReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: recovery user password.
      tags:
      - Auth
  /user/recoveryPasword/{key}:
    post:
      consumes:
      - application/json
      description: recovery user password.
      parameters:
      - description: key
        in: path
        name: key
        required: true
        type: string
      - description: Recovery password model
        in: body
        name: RecoveryPasswordInput
        required: true
        schema:
          $ref: '#/definitions/models.RecoveryPasswordModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: recovery user password.
      tags:
      - Auth
  /user/register:
    post:
      consumes:
      - application/json
      description: register a new user.
      parameters:
      - description: Register input model
        in: body
        name: RegisterInput
        required: true
        schema:
          $ref: '#/definitions/models.RegisterInputModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: a new user.
      tags:
      - Auth
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
