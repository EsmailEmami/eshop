definitions:
  httpmodels.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  models.AppPicOutPutModel:
    properties:
      appPicType:
        $ref: '#/definitions/models.AppPicType'
      createdAt:
        type: string
      description:
        type: string
      fileId:
        type: string
      id:
        type: string
      priority:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  models.AppPicReqModel:
    properties:
      appPicType:
        $ref: '#/definitions/models.AppPicType'
      description:
        type: string
      fileId:
        type: string
      priority:
        type: integer
      title:
        type: string
    type: object
  models.AppPicType:
    enum:
    - 0
    type: integer
    x-enum-varnames:
    - AppPicTypeSlider
  models.AuthToken:
    properties:
      createdAt:
        type: string
      expiresAt:
        type: string
      id:
        type: string
      loginHistories:
        items:
          $ref: '#/definitions/models.LoginHistory'
        type: array
      revoked:
        type: boolean
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userId:
        type: string
    type: object
  models.BrandOutPutModel:
    properties:
      code:
        type: string
      createdAt:
        type: string
      fileId:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.BrandReqModel:
    properties:
      code:
        type: string
      fileId:
        type: string
      name:
        type: string
    type: object
  models.CategoryOutPutModel:
    properties:
      code:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.CategoryReqModel:
    properties:
      code:
        type: string
      name:
        type: string
    type: object
  models.ColorOutPutModel:
    properties:
      code:
        type: string
      colorHex:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.ColorReqModel:
    properties:
      code:
        type: string
      colorHex:
        type: string
      name:
        type: string
    type: object
  models.FileOutPutModel:
    properties:
      createdAt:
        type: string
      extension:
        type: string
      fileType:
        $ref: '#/definitions/models.FileType'
      id:
        type: string
      mimeType:
        type: string
      originalName:
        type: string
      uniqueFineName:
        type: string
      updatedAt:
        type: string
    type: object
  models.FileType:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - FileTypeSystematic
    - FileTypeProduct
    - FileTypeBrand
    - FileTypeAppPic
  models.LoginHistory:
    properties:
      createdAt:
        type: string
      id:
        type: string
      ip:
        type: string
      token:
        $ref: '#/definitions/models.AuthToken'
      tokenId:
        type: string
      updatedAt:
        type: string
      user:
        $ref: '#/definitions/models.User'
      userAgent:
        type: string
      userId:
        type: string
    type: object
  models.LoginInputModel:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  models.LoginOutputModel:
    properties:
      expiresAt:
        type: string
      expiresIn:
        type: integer
      token:
        type: string
      user:
        $ref: '#/definitions/models.LoginOutputUserModel'
    type: object
  models.LoginOutputUserModel:
    properties:
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
    type: object
  models.ProductFeatureCategoryOutPutModel:
    properties:
      code:
        type: string
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.ProductFeatureCategoryReqModel:
    properties:
      code:
        type: string
      name:
        type: string
    type: object
  models.ProductFeatureKeyOutPutModel:
    properties:
      createdAt:
        type: string
      id:
        type: string
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.ProductFeatureKeyReqModel:
    properties:
      name:
        type: string
      productFeatureCategoryId:
        type: string
    type: object
  models.ProductFeatureValueOutPutModel:
    properties:
      createdAt:
        type: string
      id:
        type: string
      productFeatureKeyId:
        type: string
      updatedAt:
        type: string
      value:
        type: string
    type: object
  models.ProductFeatureValueReqModel:
    properties:
      productFeatureKeyId:
        type: string
      value:
        type: string
    type: object
  models.ProductItemCategoryFeatureModel:
    properties:
      category:
        type: string
      items:
        items:
          $ref: '#/definitions/models.ProductItemFeatureModel'
        type: array
    type: object
  models.ProductItemFeatureModel:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  models.ProductItemInfoOutPutModel:
    properties:
      color:
        type: string
      colorId:
        type: string
      features:
        items:
          $ref: '#/definitions/models.ProductItemCategoryFeatureModel'
        type: array
      files:
        items:
          $ref: '#/definitions/models.FileOutPutModel'
        type: array
      id:
        type: string
      price:
        type: number
      productCode:
        type: string
      productDescription:
        type: string
      productId:
        type: string
      productShortDescription:
        type: string
      productTitle:
        type: string
      quantity:
        type: integer
      status:
        $ref: '#/definitions/models.ProductStatus'
    type: object
  models.ProductItemReqModel:
    properties:
      colorId:
        type: string
      isMainItem:
        type: boolean
      price:
        type: number
      productId:
        type: string
      quantity:
        type: integer
      status:
        $ref: '#/definitions/models.ProductStatus'
    type: object
  models.ProductOutPutModel:
    properties:
      brandId:
        type: string
      brandName:
        type: string
      categoryId:
        type: string
      categoryName:
        type: string
      code:
        type: string
      id:
        type: string
      itemId:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  models.ProductReqModel:
    properties:
      brandId:
        type: string
      categoryId:
        type: string
      code:
        type: string
      description:
        type: string
      name:
        type: string
      shortDescription:
        type: string
    type: object
  models.ProductStatus:
    enum:
    - 0
    - 1
    type: integer
    x-enum-varnames:
    - ProductStatusPublish
    - ProductStatusInActive
  models.RegisterInputModel:
    properties:
      password:
        type: string
      passwordConfirmation:
        type: string
      username:
        type: string
    type: object
  models.Role:
    properties:
      code:
        type: string
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      id:
        type: string
      isSystem:
        type: boolean
      name:
        type: string
      permissions:
        items:
          type: string
        type: array
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
    type: object
  models.User:
    properties:
      authTokens:
        items:
          $ref: '#/definitions/models.AuthToken'
        type: array
      createdAt:
        type: string
      createdBy:
        $ref: '#/definitions/models.User'
      createdById:
        type: string
      enabled:
        type: boolean
      firstName:
        type: string
      id:
        type: string
      isSystem:
        type: boolean
      lastName:
        type: string
      mobile:
        type: string
      role:
        $ref: '#/definitions/models.Role'
      roleId:
        type: string
      updatedAt:
        type: string
      updatedBy:
        $ref: '#/definitions/models.User'
      updatedById:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /appPic:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.AppPicOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - AppPics
    post:
      consumes:
      - application/json
      parameters:
      - description: AppPic model
        in: body
        name: AppPic
        required: true
        schema:
          $ref: '#/definitions/models.AppPicReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - AppPics
  /appPic/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.AppPicOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - AppPics
  /appPic/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - AppPics
  /appPic/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: AppPic model
        in: body
        name: AppPic
        required: true
        schema:
          $ref: '#/definitions/models.AppPicReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - AppPics
  /auth/is_authenticated:
    get:
      consumes:
      - application/json
      description: Returns the logged in user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Returns the logged in user
      tags:
      - Auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Log user in
      parameters:
      - description: Login input model
        in: body
        name: loginInput
        required: true
        schema:
          $ref: '#/definitions/models.LoginInputModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.LoginOutputModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Log user in
      tags:
      - Auth
  /auth/logout:
    get:
      consumes:
      - application/json
      description: Logout the user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Logout the user.
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: register a new user.
      parameters:
      - description: Register input model
        in: body
        name: RegisterInput
        required: true
        schema:
          $ref: '#/definitions/models.RegisterInputModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: a new user.
      tags:
      - Auth
  /brand:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.BrandOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
    post:
      consumes:
      - application/json
      parameters:
      - description: Brand model
        in: body
        name: Brand
        required: true
        schema:
          $ref: '#/definitions/models.BrandReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /brand/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.BrandOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /brand/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /brand/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Brand model
        in: body
        name: Brand
        required: true
        schema:
          $ref: '#/definitions/models.BrandReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Brands
  /category:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CategoryOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
    post:
      consumes:
      - application/json
      parameters:
      - description: Category model
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
  /category/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
  /category/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
  /category/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Category model
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CategoryReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Categories
  /color:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ColorOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
    post:
      consumes:
      - application/json
      parameters:
      - description: Color model
        in: body
        name: Color
        required: true
        schema:
          $ref: '#/definitions/models.ColorReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
  /color/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ColorOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
  /color/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
  /color/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Color model
        in: body
        name: Color
        required: true
        schema:
          $ref: '#/definitions/models.ColorReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Colors
  /file/{fileId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: file ID
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Files
  /file/{itemId}/{fileType}:
    get:
      consumes:
      - application/json
      parameters:
      - description: item ID
        in: path
        name: itemId
        required: true
        type: string
      - description: file Type
        enum:
        - 0
        - 1
        - 2
        - 3
        in: path
        name: fileType
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.FileOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Files
  /file/delete/{fileId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: file ID
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Files
  /file/stream/{fileId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: file ID
        in: path
        name: fileId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Files
  /file/uploadImage/{itemId}/{fileType}:
    post:
      consumes:
      - application/json
      description: Uploads an image file to the server.
      parameters:
      - description: item ID
        in: path
        name: itemId
        required: true
        type: string
      - description: file Type
        enum:
        - 0
        - 1
        - 2
        - 3
        in: path
        name: fileType
        required: true
        type: integer
      - description: Image file to be uploaded
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      summary: Upload an image file
      tags:
      - Files
  /product:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProductOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Products
    post:
      consumes:
      - application/json
      parameters:
      - description: Product model
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.ProductReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Products
  /product/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Products
  /product/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Products
  /product/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: Product model
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/models.ProductReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - Products
  /productFeatureCategory:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProductFeatureCategoryOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureCategories
    post:
      consumes:
      - application/json
      parameters:
      - description: ProductFeatureCategory model
        in: body
        name: ProductFeatureCategory
        required: true
        schema:
          $ref: '#/definitions/models.ProductFeatureCategoryReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureCategories
  /productFeatureCategory/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductFeatureCategoryOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureCategories
  /productFeatureCategory/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureCategories
  /productFeatureCategory/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: ProductFeatureCategory model
        in: body
        name: ProductFeatureCategory
        required: true
        schema:
          $ref: '#/definitions/models.ProductFeatureCategoryReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureCategories
  /productFeatureKey:
    get:
      consumes:
      - application/json
      parameters:
      - description: Product Feature Category ID
        in: query
        name: categoryId
        type: string
      - description: Search Term
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProductFeatureKeyOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureKeys
    post:
      consumes:
      - application/json
      parameters:
      - description: ProductFeatureKey model
        in: body
        name: ProductFeatureKey
        required: true
        schema:
          $ref: '#/definitions/models.ProductFeatureKeyReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureKeys
  /productFeatureKey/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductFeatureKeyOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureKeys
  /productFeatureKey/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureKeys
  /productFeatureKey/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: ProductFeatureKey model
        in: body
        name: ProductFeatureKey
        required: true
        schema:
          $ref: '#/definitions/models.ProductFeatureKeyReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureKeys
  /productFeatureValue:
    get:
      consumes:
      - application/json
      parameters:
      - description: Product Feature Key ID
        in: query
        name: keyId
        type: string
      - description: Product ID
        in: query
        name: productId
        type: string
      - description: Search Term
        in: query
        name: searchTerm
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProductFeatureValueOutPutModel'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureValues
  /productFeatureValue/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductFeatureValueOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureValues
  /productFeatureValue/{productId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: productId
        required: true
        type: string
      - description: ProductFeatureValue model
        in: body
        name: ProductFeatureValue
        required: true
        schema:
          items:
            $ref: '#/definitions/models.ProductFeatureValueReqModel'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureValues
  /productFeatureValue/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductFeatureValues
  /productItem:
    post:
      consumes:
      - application/json
      parameters:
      - description: ProductItem model
        in: body
        name: ProductItem
        required: true
        schema:
          $ref: '#/definitions/models.ProductItemReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductItems
  /productItem/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductItemInfoOutPutModel'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductItems
  /productItem/delete/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductItems
  /productItem/edit/{id}:
    post:
      consumes:
      - application/json
      parameters:
      - description: Record ID
        in: path
        name: id
        required: true
        type: string
      - description: ProductItem model
        in: body
        name: ProductItem
        required: true
        schema:
          $ref: '#/definitions/models.ProductItemReqModel'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpmodels.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - Bearer: []
      tags:
      - ProductItems
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
